name: Flutter Integration Tests on BrowserStack

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  android-tests:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Set up Java 17
      uses: actions/setup-java@v4
      with:
        distribution: 'zulu'
        java-version: '17'

    - name: Set up Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.24.5'
        channel: 'stable'

    - name: Cache Flutter dependencies
      uses: actions/cache@v3
      with:
        path: |
          ~/.pub-cache
        key: ${{ runner.os }}-pub-${{ hashFiles('**/pubspec.yaml') }}

    - name: Install Flutter dependencies
      run: flutter pub get

    - name: Build app APK
      run: flutter build apk --debug

    - name: Build test APK
      run: ./android/gradlew -p android app:assembleDebugAndroidTest -Ptarget=integration_test/app_test.dart

    - name: Debug APK outputs
      run: |
        echo "=== Debug: App APK ==="
        ls -lah build/app/outputs/flutter-apk || true
        echo "=== Debug: Test APK ==="
        ls -lah build/app/outputs/apk/androidTest/debug || true

    - name: Upload app to BrowserStack
      id: upload-app
      run: |
        set -e
        response=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          -X POST "https://api-cloud.browserstack.com/app-automate/flutter-integration-tests/v2/android/app" \
          -F "file=@build/app/outputs/flutter-apk/app-debug.apk")
        echo "Upload App Response: $response"
        echo "$response" | jq -r .app_url > app_url.txt
      shell: bash

    - name: Upload test suite to BrowserStack
      id: upload-test
      run: |
        set -e
        response=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          -X POST "https://api-cloud.browserstack.com/app-automate/flutter-integration-tests/v2/android/test-suite" \
          -F "file=@build/app/outputs/apk/androidTest/debug/app-debug-androidTest.apk")
        echo "Upload Test Suite Response: $response"
        echo "$response" | jq -r .test_suite_url > test_suite_url.txt
      shell: bash

    - name: Start BrowserStack test build
      id: start-build
      run: |
        set -e
        app_url=$(cat app_url.txt)
        test_suite_url=$(cat test_suite_url.txt)
        response=$(curl -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
          -X POST "https://api-cloud.browserstack.com/app-automate/flutter-integration-tests/v2/android/build" \
          -d '{
            "devices": ["Samsung Galaxy S22-12.0"],
            "app": "'$app_url'",
            "testSuite": "'$test_suite_url'",
            "buildName": "Flutter GitHub Actions Build"
          }' \
          -H "Content-Type: application/json")
        echo "Start Build Response: $response"
        build_id=$(echo "$response" | jq -r .buildId)
        echo "Build ID: $build_id"
        echo "build_id=$build_id" >> $GITHUB_OUTPUT
      shell: bash

    - name: Wait for BrowserStack test completion
      run: |
        set -e
        build_id=${{ steps.start-build.outputs.build_id }}
        status=""
        echo "Waiting for BrowserStack test build $build_id to complete..."
        while [ "$status" != "completed" ]; do
          response=$(curl -s -u "${{ secrets.BROWSERSTACK_USERNAME }}:${{ secrets.BROWSERSTACK_ACCESS_KEY }}" \
            -X GET "https://api-cloud.browserstack.com/app-automate/flutter-integration-tests/v2/android/builds/$build_id")
          echo "Status Response: $response"
          status=$(echo "$response" | jq -r .status)
          echo "Current status: $status"
          if [ "$status" != "completed" ]; then
            sleep 30
          fi
        done
        echo "âœ… BrowserStack build completed!"
